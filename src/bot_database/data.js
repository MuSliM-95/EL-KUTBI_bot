
module.exports = {

    telegramGroups: {
        infoFunction: function (name) {
            return `
<strong>ÿßŸÑÿ≥ŸÑÿßŸÖ ÿπŸÑŸäŸÉŸÖ Ÿàÿ±ÿ≠ŸÖÿ© ÿßŸÑŸÑŸá Ÿàÿ®ÿ±ŸÉÿßÿ™Ÿá ${name}</strong>

<strong>–ú—ã –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –≤–∞—Å –≤ –æ–Ω–ª–∞–π–Ω –º–∞–≥–∞–∑–∏–Ω–µ EL-KUTBI.</strong>

<em>–£ –Ω–∞—Å –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞–π—Ç–∏:</em>
<em>üìñ –ò—Å–ª–∞–º—Å–∫—É—é –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä—É –Ω–∞ –ê—Ä–∞–±—Å–∫–æ–º –∏ –†—É—Å—Å–∫–æ–º —è–∑—ã–∫–∞—Ö.</em>

<em>üíÑ–ê —Ç–∞–∫ –∂–µ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—É—é —É—Ö–æ–¥–æ–≤—É—é –∫–æ—Å–º–µ—Ç–∏–∫—É –æ—Ç –µ–≥–∏–ø–µ—Ç—Å–∫–æ–π —Ñ–∏—Ä–º—ã Nefertari.</em> 
    
    `
        },

 
        deliveryAndPrices: `
        <strong>–î–æ—Å—Ç–∞–≤–∫–∞</strong> 

<em>üöê –î–æ –ë–µ—Ä–∫–∞—Ç–∞ –±–µ—Å–ø–ª–∞—Ç–Ω–æ</em>  

<em>–î–æ—Å—Ç–∞–≤–∫–∞ —Å –ë–µ—Ä–∫–∞—Ç–∞ –¥–æ –ø—É–Ω–∫—Ç–∞ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –æ–ø–ª–∞—á–∏–≤–∞–µ—Ç–µ –≤—ã.</em> 

<em>‚úâÔ∏è –ü–æ—á—Ç–æ–π –†–æ—Å—Å–∏–∏</em> 
<em>üöå –ú–∞—Ä—à—Ä—É—Ç–∫–∞</em> 
<em>üó≥Ô∏è –í–∞—à–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –¥–æ—Å—Ç–∞–≤–∫–∏</em> 

<strong>–¢–æ–≤–∞—Ä –∏ —Ü–µ–Ω—ã</strong>

<em>–° —Ç–æ–≤–∞—Ä–æ–≤ –∏ —Ü–µ–Ω–∞–º–∏ –≤—ã –º–æ–∂–µ—Ç–µ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è –≤ –Ω–∞—à–µ–π –≥—Ä—É–ø–ø–µ</em> 

<em><a href="https://t.me/elkutbi">üîó EL-KUTBI</a> </em> 
        `,

        orderSample:
            ` 
<strong>–ó–∞–∫–∞–∑</strong> 

<strong>–í–µ–¥–∏—Ç–µ –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ —Ç–∞–∫–æ–º —Ñ–æ—Ä–º–∞—Ç–µ ‚¨áÔ∏è</strong>

<strong>
 –§.–ò.–û: <em> –ê—Ä—Ö–∏–µ–≤ –ú–∞–≥–æ–º–µ–¥ –•–∞–¥–∏–¥–æ–≤–∏—á,</em>
 –ê–¥—Ä–µ—Å: <i> –ß–µ—á–µ–Ω—Å–∫–∞—è —Ä–µ—Å–ø—É–±–ª–∏–∫–∞, –ê—á—Ö–æ–π-–º–∞—Ä—Ç–∞–Ω–æ–≤—Å–∫–∏–π —Ä–∞–π–æ–Ω, —Å–µ–ª–æ –°–∞–º–∞—à–∫–∏, —É–ª–∏—Ü–∞ –º–∞–≥–æ–º–∞–¥–æ–≤–∞ 35.</i>
 –ö–Ω–∏–≥–∏: <i>–ò—Å–±–∞—Ç—É –∞–ª—å-—Ö–∞–¥–¥–∏ –õ–∏–ª–ª–∞—Ö,  –ö–∞—à—Ñ—É –∞—à-–®—É–±—É—Ö–∞—Ç,</i>
  –ü—Ä–∏–∫—Ä–µ–ø–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∫ –∑–∞–∫–∞–∑—É: <i>–ü—Ä–∏–º–µ—Ä</i></strong>
        
        `,


        orderFunction: async function (data) {
            return `
         <strong>–ó–∞–∫–∞–∑: <em>${data.userName}</em></strong>
         `
        },

        getBooksHtml: function (books) {
            const html = books.map(el => {
                // console.log(el);
                return `/${el.id} <strong>–ù–∞–∑–≤–∞–Ω–∏–µ:</strong> <em>${el.name}</em> <strong>–¶–µ–Ω–∞:</strong> <em>${el.price}—Ä</em> <strong>–Ø–∑—ã–∫:</strong> ${el.language}`

            }).join('\n')
            return html
        },
        getBasketHtml: function (basketBooks) {
            let html
            if (basketBooks.length === 0) {
                return html = `<strong>–ö–æ—Ä–∑–∏–Ω–∞</strong>\n–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞`

            }
            if (basketBooks) {
                return html = basketBooks.map(el => {
                    return `<strong>–ö–æ—Ä–∑–∏–Ω–∞</strong>\n/${el.id} <strong>–ù–∞–∑–≤–∞–Ω–∏–µ:</strong> <em>${el.name}</em> <strong>–¶–µ–Ω–∞:</strong> <em>${el.price}—Ä</em> <strong>–Ø–∑—ã–∫:</strong> ${el.language}`
                }).join('\n')
            } else {
                return html = `<strong>–ö–æ—Ä–∑–∏–Ω–∞</strong>\n–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞`
            }

        },


        getBookHtml: function (book, basketUser) {
            let addDelete = '–î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É'
            let TYPE = 'ADD_BOOK'
            console.log(basketUser.basket);
            console.log(book._id);
            basketUser.basket.some(el => {
                if (el.toString() === book._id.toString()) {
                    console.log(1);
                    TYPE = 'DELETE_BOOK'
                    return addDelete = '–£–¥–∞–ª–∏—Ç—å –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã'
                } else if (el.toString() !== book._id.toString()) {
                    TYPE = 'ADD_BOOK'
                    addDelete = '–î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É'
                }
            })
            return books = {
                parse_mode: 'HTML',
                caption: `<strong>–ù–∞–∑–≤–∞–Ω–∏–µ:</strong> <em>${book.name}</em>\n<strong>–¶–µ–Ω–∞:</strong> <em>${book.price}—Ä</em>\n<strong>–Ø–∑—ã–∫:</strong> ${book.language}`,
                reply_markup: {
                    inline_keyboard: [
                        [
                            {
                                text: addDelete, callback_data: JSON.stringify({
                                    type: TYPE,
                                    book: book._id
                                })
                            }
                        ],
                        [
                            { text: '–ö–Ω–∏–≥–∏', callback_data: JSON.stringify({
                                type: 'BOOKS'
                            }) } 
                        ]
                    ]
                }

            }

        },

        getProductsHtml: function (products) {
            const html = products.map(el => {
                `/${el.id} <strong>–ù–∞–∑–≤–∞–Ω–∏–µ:</strong> <em>${el.name}</em> <strong>–¶–µ–Ω–∞:</strong> <em>${el.price}—Ä</em> <strong>–°—Ç—Ä–∞–Ω–∞:</strong> ${el.country} <strong>–§–∏—Ä–º–∞:</strong> <em>${el.firm}</em>`
            }).join('\n')
            return html
        }

    }
}
